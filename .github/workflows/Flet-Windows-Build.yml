name: Flet Windows Build

on:
  push:
    tags: ['v*']  # 标签触发
  workflow_dispatch:  # 手动触发
    inputs:
      test_version:
        description: '测试版本号'
        required: true
        default: 'v0.1.0-test'

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          architecture: x64

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Install dependencies
        run: |
          uv sync
          uv add flet

      - name: Build with flet
        run: |
          if ("${{ github.event_name }}" -eq "workflow_dispatch") {
            $VERSION = "${{ github.event.inputs.test_version }}"
          } else {
            $VERSION = "${{ github.ref_name }}"
          }
          
          # 设置Windows环境变量
          $env:PYTHONIOENCODING = "utf-8"
          $env:PYTHONUTF8 = "1"
          
          # 执行构建命令
          uv run flet build windows --build-version $VERSION
        shell: powershell

      - name: Package Windows build
        shell: powershell
        run: |
          # 创建版本目录
          $version = if ("${{ github.event_name }}" -eq "workflow_dispatch") {
            "${{ github.event.inputs.test_version }}"
          } else {
            "${{ github.ref_name }}"
          }
          
          $artifactName = "swisskit-windows-x64-$version"
          
          # 创建发布目录
          New-Item -ItemType Directory -Path "release\$artifactName" -Force
          
          # 复制构建文件
          Copy-Item -Path "build\windows\*" -Destination "release\$artifactName" -Recurse
          
          # 创建ZIP包
          Compress-Archive -Path "release\$artifactName" -DestinationPath "build\$artifactName.zip"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: |
            build/*.zip
            build/windows/SwissKit.exe  # 保留原始exe文件作为备份

  release:
    needs: build-windows
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-build
          path: artifacts/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.test_version || github.ref_name }}
          name: SwissKit Release ${{ github.event.inputs.test_version || github.ref_name }}
          files: |
            artifacts/**/*
          body: |
            ## Windows 版本下载说明
            
            请下载对应版本的ZIP包：
            - 文件名格式: `swisskit-windows-x64-[版本号].zip`
            
            ### 使用说明：
            1. 下载ZIP文件并解压
            2. 运行文件夹内的 `SwissKit.exe`
            3. 如果遇到安全警告，请选择"更多信息"→"仍要运行"
            
            > 包含文件：
            > - SwissKit.exe (主程序)
            > - 所有必要的依赖库和资源文件
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
